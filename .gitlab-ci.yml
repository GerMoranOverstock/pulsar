before_script:
  - eval $(ssh-agent -s)
  - git config user.name "Streamlio CI"
  - git config user.email "ssg-streamlio@splunk.com"
  - ulimit -c unlimited
  - export MAVEN_OPTS="-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=yyyy-MM-dd'T'HH:mm:ss.SSSZ -Dorg.slf4j.simpleLogger.defaultLogLevel=INFO"

cache:
  paths:
    - /root/.m2/repository

variables:
  DOCKER_IMAGE: "aahmedse/maven"
  DOCKER_TAG: "3.6.1-jdk-8-dind"
  PYPI_URL: "https://repo.splunk.com/artifactory/api/pypi/pypi"
  PLAYGROUND_DOCKER_REGISTRY: cloudrepo-docker-playground.jfrog.io
  PRODUCTION_DOCKER_REGISTRY: cloudrepo-docker.jfrog.io
  PLAYGROUND_DOCKER_PATH: docker:v1/play/prefix/maas
  PRODUCTION_DOCKER_PATH: docker:v1/prod/prefix/maas

stages:
  - deploy-manual
  - ci
  - deploy

# Deploy alpine image to docker repo Build Job Start

release_alpine3.8_image_playground:
  image: aahmedse/maven:3.6.1-jdk-8-dind
  stage: deploy-manual
  cache: {}
  script:
    - creds-helper init
    - eval $(creds-helper docker --eval ${PLAYGROUND_DOCKER_PATH})
    - ./pulsar-client-cpp/docker/alpine/build-alpine-image.sh
    - export POM_PROJECT_VERSION=$(python src/get-project-version.py)
    - CUR_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - NEW_VERSION=$(echo $CUR_VERSION | sed 's/\([0-9]*\.[0-9]\.[0-9]\).*/\1.SPLK.'$CI_JOB_ID'/')
    - echo "Docker TAG ${NEW_VERSION}"
    - docker tag pulsar-alpine3.8:${POM_PROJECT_VERSION} ${PLAYGROUND_DOCKER_REGISTRY}/maas/pulsar-alpine3.8:${NEW_VERSION}
    - docker push ${PLAYGROUND_DOCKER_REGISTRY}/maas/pulsar-alpine3.8:${NEW_VERSION}
  when: manual

release_alpine3.8_image_production:
  image: aahmedse/maven:3.6.1-jdk-8-dind
  stage: deploy-manual
  cache: {}
  script:
    - creds-helper init
    - eval $(creds-helper docker --eval ${PRODUCTION_DOCKER_PATH})
    - ./pulsar-client-cpp/docker/alpine/build-alpine-image.sh
    - export POM_PROJECT_VERSION=$(python src/get-project-version.py)
    - CUR_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - NEW_VERSION=$(echo $CUR_VERSION | sed 's/\([0-9]*\.[0-9]\.[0-9]\).*/\1.SPLK.'$CI_JOB_ID'/')
    - echo "Docker TAG ${NEW_VERSION}"
    - docker tag pulsar-alpine3.8:${POM_PROJECT_VERSION} ${PRODUCTION_DOCKER_REGISTRY}/maas/pulsar-alpine3.8:${NEW_VERSION}
    - docker push ${PRODUCTION_DOCKER_REGISTRY}/maas/pulsar-alpine3.8:${NEW_VERSION}
  when: manual

# == Python Build Job Start

release_pypi_manylinux3.7:
  image: apachepulsar/pulsar-build:manylinux-cp37-cp37m
  stage: deploy-manual
  cache: {}
  script:
    - export USE_FULL_POM_NAME=True
    - cd pulsar-client-cpp
    - cmake . -DPYTHON_INCLUDE_DIR=/opt/python/cp37-cp37m/include/python3.7 -DPYTHON_LIBRARY=/opt/python/cp37-cp37m/lib -DLINK_STATIC=ON -DBUILD_TESTS=OFF
    - make -j8 _pulsar
    - cd python
    - python3 setup.py bdist_wheel
    - auditwheel repair dist/pulsar_client-*-$PYTHON_SPEC-linux_x86_64.whl
    - twine upload --verbose --skip-existing --repository-url "${PYPI_URL}" dist/*.whl -u "${STREAMLIO_ARTIFACTORY_USERNAME}" -p "${STREAMLIO_ARTIFACTORY_PASSWORD}"
  when: manual

# == Python Build Job End

tag_release:
  image: apachepulsar/pulsar-build:latest
  stage: deploy
  only:
    - branch-2.4-streamlio
    - branch-2.5-streamlio
  script:
    - build/splunk-tag-release.sh

checkin_unit:
  image: apachepulsar/pulsar-build:latest
  stage: ci
  timeout: 180 mins
  only:
    - merge_requests
  script:
    - dev/monitor-mvn &
    - timeout 170m mvn -fae -B --show-version -ntp install -DtestForkCount=1 -DtestReuseFork=false
  after_script:
    - date
    - tar zcf test-results.tgz */target/surefire-reports/
    - echo "[START_TEST_SUMMARY]"
    - build/testsummary.py */target/surefire-reports/TEST-*.xml
    - echo "[END_TEST_SUMMARY]"
    - build/testtrim.py $(find . -name 'TEST*.xml')
  artifacts:
    paths:
      - test-results.tgz
      - process-debug.log
    expire_in: 100 days
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"

checkin_cpp:
  image: apachepulsar/pulsar-build:latest
  stage: ci
  timeout: 180 mins
  only:
    - merge_requests
  script:
    - mvn -B --show-version -ntp package -DskipTests
    - /bin/bash -c "cd pulsar-client-cpp && cmake . -DCMAKE_BUILD_TYPE=Debug && make check-format && make -j8"
    - /bin/bash -c "cd pulsar-client-cpp && ./run-unit-tests.sh"
  after_script:
    - cp -r /tmp/pulsar-test-dist/logs broker-logs
    - cp /tmp/*core* .
  artifacts:
    paths:
      - broker-logs/
      - "pulsar-client-cpp/tests/main"
      - "pulsar-client-cpp/tests/*core*"
      - "pulsar-client-cpp/lib/libpulsar.so.*"
      - "pulsar-client-cpp/lib/libpulsar.so"
      - "pulsar-client-cpp/python/_pulsar.so"
      - "*core*"
    expire_in: 100 days
    when: always

release_artifacts:
  image: $DOCKER_IMAGE:$DOCKER_TAG
  stage: deploy
  timeout: 60 mins
  only:
    - /^release-.*$/
  script:
    - mvn -B --show-version -ntp install -DskipTests
    - ./release_maven.sh
