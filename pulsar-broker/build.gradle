
plugins {
  id "com.google.protobuf" version "0.8.11"
}

dependencies {
  implementation project(':pulsar-client-api')
  implementation project(':pulsar-common')
  implementation project(':pulsar-broker-common')
  implementation project(':pulsar-transaction-parent:pulsar-transaction-common')
  implementation project(':pulsar-zookeeper-utils')
  implementation project(':pulsar-functions:pulsar-functions-worker')
  implementation project(':pulsar-client-original')
  implementation project(':pulsar-websocket')
  implementation project(':pulsar-client-admin-original')
  implementation project(':managed-ledger')
  implementation project(':pulsar-transaction-parent:pulsar-transaction-coordinator')
  implementation project(':pulsar-functions:pulsar-functions-runtime')
  implementation project(':pulsar-functions:pulsar-functions-worker')

  implementation "org.apache.bookkeeper:bookkeeper-server:${depVersions.bookkeeper}"
  implementation "org.apache.bookkeeper:stream-storage-service-impl:${depVersions.bookkeeper}"

  implementation "org.apache.pulsar:protobuf-shaded:${depVersions.protobufShaded}"

  implementation "com.github.ben-manes.caffeine:caffeine:${depVersions.caffeine}"
  implementation "io.jsonwebtoken:jjwt-api:${depVersions.jsonwebtoken}"

    // implementation 'commons-codec:commons-codec:1.10'
  implementation "commons-collections:commons-collections:${depVersions.commonsCollections}"
    // implementation 'org.apache.commons:commons-lang3:3.4'
    // implementation 'org.slf4j:slf4j-api:1.7.25'
    // implementation 'io.netty:netty-transport:4.1.43.Final'

    // implementation 'com.google.protobuf:protobuf-java:3.5.1'
    //
    // implementation 'org.apache.bookkeeper:bookkeeper-tools-framework:4.10.0'
    //
    implementation "org.eclipse.jetty:jetty-server:${depVersions.jetty}"
    implementation "org.eclipse.jetty:jetty-servlet:${depVersions.jetty}"
    implementation "org.eclipse.jetty:jetty-servlets:${depVersions.jetty}"

    implementation "org.glassfish.jersey.core:jersey-server:${depVersions.jersey}"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:${depVersions.jersey}"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet:${depVersions.jersey}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${depVersions.jersey}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${depVersions.jersey}"

    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${depVersions.jackson}"
    implementation "com.fasterxml.jackson.module:jackson-module-jsonSchema:${depVersions.jackson}"

    implementation "org.slf4j:jul-to-slf4j:${depVersions.slf4j}"
    implementation "org.slf4j:jcl-over-slf4j:${depVersions.slf4j}"
    // implementation 'com.google.guava:guava:25.1-jre'
    // implementation 'com.beust:jcommander:1.48'

    implementation "io.prometheus:simpleclient:${depVersions.prometheus}"
    implementation "io.prometheus:simpleclient_jetty:${depVersions.prometheus}"
    implementation "io.prometheus:simpleclient_hotspot:${depVersions.prometheus}"

    implementation "io.swagger:swagger-annotations:${depVersions.swagger}"
    implementation "io.swagger:swagger-core:${depVersions.swagger}"

    // implementation 'org.hdrhistogram:HdrHistogram:2.1.9'
    // implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.github.zafarkhaja:java-semver:${depVersions.semver}"
  implementation "org.apache.avro:avro:${depVersions.avro}"
    implementation "com.carrotsearch:hppc:${depVersions.hppc}"
    // implementation 'javax.xml.bind:jaxb-api:2.3.1'
    // implementation 'com.sun.activation:javax.activation:1.2.0'

    testImplementation project(':pulsar-discovery-service')
    testImplementation project(':managed-ledger')
    testImplementation project(':pulsar-zookeeper-utils')
    testImplementation project(':pulsar-functions:pulsar-functions-local-runner-original')
    testImplementation project(':pulsar-functions:pulsar-functions-api-examples')
    testImplementation project(':pulsar-io:pulsar-io-data-generator')
}

description = 'Pulsar Broker'

task testsJar(type: Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

publishing.publications.maven.artifact(testsJar)

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${depVersions.protobuf3}"
  }
}
